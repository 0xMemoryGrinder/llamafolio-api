name: 'Deploy Master - Dev'

on:
  workflow_dispatch:
  push:
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: deploy
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]
        pnvm-version: [latest]
    runs-on: ${{ matrix.os }}
    env:
      STAGE: 'dev'
      ACTIONS_RUNNER_DEBUG: true
      PGHOST: ${{ secrets.PGHOST }}
      PGUSER: ${{ secrets.PGUSER }}
      PGPORT: ${{ secrets.PGPORT }}
      PGDATABASE: ${{ secrets.PGDATABASE }}
      PGPASSWORD: ${{ secrets.PGPASSWORD }}
      ARBITRUM_RPC: ${{ secrets.ARBITRUM_RPC }}
      OPTIMISM_RPC: ${{ secrets.OPTIMISM_RPC }}
      CUSTOM_PROVIDER: ${{ secrets.CUSTOM_PROVIDER }}
      LLAMANODES_API_KEY: ${{ secrets.LLAMANODES_API_KEY }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Setup pnpm [${{ matrix.pnvm-version }}]'
        uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ matrix.pnvm-version }}

      - name: 'Setup Node.js [${{ matrix.node-version }}]'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: 'Install Dependencies'
        run: pnpm install --frozen-lockfile

      - name: 'Build'
        run: pnpm build

      - name: 'Deploy'
        uses: serverless/github-action@v3.1
        with:
          entrypoint: /bin/bash
          args: -c "serverless plugin install --name serverless-esbuild && serverless deploy --stage ${{ env.STAGE }} --verbose"
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}